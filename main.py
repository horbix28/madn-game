"""
The following code is mainly generated by ChatGPT-4o - it can contain logic and coding errors. So far it's not well tested.
"""
import random

class MenschAergereDichNicht:
    def __init__(self, players):
        # Check if player count is between 2 and 4.
        if len(players) < 2 or len(players) > 4:
            raise ValueError("Player count needs to be between 2 and 4.")
        self.game_over = False
        self.players = players
        self.start_positions = {
            'red': 0,
            'blue': 10,
            'yellow': 20,
            'green': 30
        }
        self.end_positions = {
            'red': list(range(36, 40)),
            'blue': list(range(6, 10)),
            'yellow': list(range(16, 20)),
            'green': list(range(26, 30))
        }
        self.positions = {color: [-1, -1, -1, -1] for color in players}
        self.starting_color = random.choice(players)

    def move_piece(self, color, piece_index, steps):
        if color not in self.players:
            raise ValueError(f"{color} is not playing.")

        current_pos = self.positions[color][piece_index]

        # Check if figure is home
        if current_pos == -1:
            if steps == 6:
                self.positions[color][piece_index] = self.start_positions[color]
                print(f"{color.capitalize()} piece {piece_index} starts.")
            else:
                print(f"{color.capitalize()} piece {piece_index} cannot move yet. Roll a 6 to start.")
            return

        # Calculate new position
        new_pos = (current_pos + steps) % 40

        # Wenn die neue Position im Endbereich liegt
        if new_pos in self.end_positions[color]:
            if all(p != new_pos for p in self.positions[color]):
                self.positions[color][piece_index] = new_pos
            else:
                print(f"{color.capitalize()} piece {piece_index} cannot move to end position {new_pos}.")
        else:
            self.positions[color][piece_index] = new_pos

        # Check if other figure gets kicked out
        for opponent_color, pieces in self.positions.items():
            if opponent_color != color:
                for i, pos in enumerate(pieces):
                    if pos == new_pos:
                        self.positions[opponent_color][i] = -1
                        print(f"{color.capitalize()} piece {piece_index} knocked out {opponent_color.capitalize()} piece {i}!")

    def display_board(self):
        # Darstellung der Positionen der Spielfiguren
        print("Current board positions:")
        for color, positions in self.positions.items():
            print(f"{color.capitalize()}: {positions}")
    def game_loop(self):
        while not self.game_over:
            





players = ['red', 'blue']  # Zwei Spieler: red und blue
game = MenschAergereDichNicht(players)
game.display_board()
game.move_piece('red', 0, 6)  # rede Figur 0 startet
game.display_board()
game.move_piece('blue', 0, 6)  # bluee Figur 0 startet
game.display_board()
game.move_piece('red', 0, 4)  # rede Figur 0 bewegt sich 4 Schritte
game.display_board()
